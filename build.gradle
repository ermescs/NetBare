// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.11'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.11"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

/** Returns the artifact ID for the project, or null if it is not published. */
ext.publishedArtifactId = { project ->
    if (project.name == 'netbare-core'
            || project.name == 'netbare-injector') {
        return project.name
    } else {
        return null
    }
}

allprojects {
    group = "com.github.megatronking.netbare"
    project.ext.artifactId = rootProject.ext.publishedArtifactId(project)
    version = "1.1.0"

    repositories {
        google()
        jcenter()
    }
}

subprojects {
    if (project.ext.artifactId == null) return

    apply plugin: 'maven-publish'
    apply plugin: 'maven'

    project.afterEvaluate {
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "${nexusUrl}/nexus/repository/maven-releases/") {
                        authentication(userName: nexusUsername, password: nexusPassword)
                    }
                    snapshotRepository(url: "${nexusUrl}/nexus/repository/maven-snapshots/") {
                        authentication(userName: nexusUsername, password: nexusPassword)
                    }
                }
            }
        }

        publishing {
            publications {
                libraryRelease(MavenPublication) {
                    groupId = project.group
                    artifactId = project.ext.artifactId
                    version = project.version

                    project.afterEvaluate {
                        artifact bundleReleaseAar
                    }
                }

                libraryDebug(MavenPublication) {
                    groupId = project.group
                    artifactId = project.ext.artifactId
                    version = project.version

                    project.afterEvaluate {
                        artifact bundleDebugAar
                        artifact sourceJar
                    }
                }
            }
        }
    }
}

subprojects {
    project.afterEvaluate {
        task sourceJar(type: Jar) {
            from project.android.sourceSets.main.java.srcDirs
            classifier "sources"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
